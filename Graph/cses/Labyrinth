#include<bits/stdc++.h>
using namespace std;

bool visited[1000][1000] = {false};
char grid[1000][1000];
vector<pair<int,int>> moves = {{1,0},{-1,0},{0,1},{0,-1}};
bool flag = false;
int r,c;
string s = "";

bool isValid(int i , int j){
    if(i >= r || j >= c || i < 0 || j < 0 || grid[i][j] == '#' || visited[i][j] == true){
        return false;
    }
    return true;
}

void dfs(int i,int j){

    visited[i][j] = true;
    
    for(auto p : moves){
        if(isValid(i + p.first,j + p.second)){
            if(grid[i+p.first][j+p.second] == 'B'){
                flag = true;
            }

            if(i+p.first > i) s += 'D';
            else if(i+p.first < i) s += 'U'; 
            else if(j+p.second > j) s += 'R';
            else if(j+p.second < j) s += 'L';
            if(flag == true) return;
            dfs(i+p.first,j+p.second);

        }
    }
}

int main(){
    int a,b;
    cin >> r >> c;
    for(int i = 0; i < r; i++){
        for(int j = 0; j < c; j++){
            cin >> grid[i][j];
            if(grid[i][j] == 'A'){
                a = i;
                b = j;
            }
        }
    }

    dfs(a,b);

    if(flag){
        cout << "YES" << endl;
        cout << s.size() - 1 << endl;
        for(int i = 0; i < s.size() - 1; i++){
            cout << s[i];
        }
        cout << endl;
    }
    else cout << "NO" << endl;

    return 0;
}
