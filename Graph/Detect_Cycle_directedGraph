#include <bits/stdc++.h>
using namespace std;

bool dfs(vector<int> adj[],vector<bool>visited,int curr){
    if(visited[curr] == true){
        return true;
    }
    visited[curr] = true;
    bool flag = false;
    for(auto i : adj[curr]){
        flag = dfs(adj,visited,i);
        if(flag == true){
            return true;
        }
    }
    return false;
}

bool isCycle(int V,vector<int> adj[]){
    vector<bool> visited(V,false);
    bool flag = false;
    for(int i = 0; i < V; i++){
        visited[i] = true;
        for(auto j : adj[i]){
            flag = dfs(adj,visited,j);
            if(flag == true){
                return true;
            }
        }
        visited[i] = false;
    }
    return false;
}

int main(){

    int t;
    cin >> t;

    while(t--){

        int v,e;
        cin >> v >> e;

        vector<int> adj[v];

        for(int i = 0; i < e; i++){
            int a,b;
            cin >> a >> b;
            adj[a].push_back(b);
        }

        bool Flag = isCycle(v,adj);

        if(Flag){
            cout << "The Graph has exist Cycle" << endl;
        }else{
            cout << "The doesn't exist Cycle" << endl;
        }
    }

    return 0;
}
